name: Tests

on:
  push:
  pull_request:
    branches:
      - master
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ios-unit-tests:
    name: iOS Unit Tests
    runs-on: macos-12
    timeout-minutes: 30
    steps:
      - # Checkout the repository
        uses: actions/checkout@v2

      - # Install dependencies
        run: brew install xcbeautify

      - # Run Tests iOS
        name: Run Tests iOS
        run: |
          set -o pipefail && \
          env NSUnbufferedIO=YES \
          xcodebuild -workspace . \
            -scheme "TPPDF" \
            -sdk iphonesimulator \
            -destination "OS=16.0,name=iPhone 14 Pro" \
            -configuration Debug \
            -enableCodeCoverage YES \
            -derivedDataPath DerivedData \
            -resultBundlePath test_output \
            CODE_SIGNING_ALLOWED="NO" \
            test 2>&1 | tee test.log | xcbeautify

      - name: Upload test log file on error
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          path: test.log

      - name: Generate code coverage reports
        run: |
          xcrun llvm-cov export \
            DerivedData/Build/Products/Debug-iphonesimulator/TPPDFTests.xctest/TPPDFTests \
            --instr-profile DerivedData/**/*.profdata \
            --format="lcov" > unit-tests.coverage.lcov
          xcrun llvm-cov export \
            DerivedData/Build/Products/Debug-iphonesimulator/TPPDFIntegrationTests.xctest/TPPDFIntegrationTests \
            --instr-profile DerivedData/**/*.profdata \
            --format="lcov" > integration-tests.coverage.lcov

      - # Codecov Coverage
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          fail_ci_if_error: true
          files: ./unit-tests.coverage.lcov,./integration-tests.coverage.lcov
          xcode_archive_path: test_output.xcresults

  macos-unit-tests:
    name: macOS Unit Tests
    runs-on: macos-12
    timeout-minutes: 30
    steps:
      - # Checkout the repository
        uses: actions/checkout@v2

      - # Install dependencies
        run: brew install xcbeautify

      - # Run Unit Tests iOS
        name: Run Unit Tests macOS
        run: |
          swift test --parallel
